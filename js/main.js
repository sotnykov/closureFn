// cоздается глобальное лексическое окружение, которое содержит глобальные объекты и переменные

function createSum() {
  
  // объявляется функция createSum. В момент объявления функция createSum получает свое лексическое окружение, которое включает в себя переменную total

  let total = 0;
  
  return function addNumber(num) {

    // внутри createSum объявляется вложенная функция addNumber. При создании функции addNumber внутри createSum, она получает доступ к лексическому окружению родителя. Это означает, что при вызове addNumber, она может использовать и изменять значение переменной total, которая была объявлена внутри createSum

    total += num;

    return total;
  }
}

const sum = createSum();

// функция createSum возвращает функцию addNumber, которая сохраняется в переменной sum. Функция addNumber сохраняет доступ к переменной total, даже после того как createSum завершает выполнение

console.log(sum(3));

// вызывается функция sum с аргументом 3. Внутри sum выполняется addNumber(3). При этом addNumber обращается к total, который равен 0, и прибавляет 3, возвращая 3

console.log(sum(5));

 // вызывается функция sum с аргументом 5. Внутри sum выполняется addNumber(5). total был изменен предыдущим вызовом, и теперь он равен 3. addNumber(5) прибавляет 5 к total, и функция возвращает 8.

console.log(sum(20));

 // вызывается функция sum с аргументом 20. Внутри sum выполняется addNumber(20). total был изменен предыдущими вызовами и равен 8. addNumber(20) прибавляет 20 к total, и функция возвращает 28.